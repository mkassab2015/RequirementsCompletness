Study Title,Method,Description,Category
"On the interplay between consistency, completeness, and correctness in requirements evolution",Evolutionary proof obligations,"At each step of requirements evolution, prove completeness with respect to the previous version of requirements.","Formal modeling, Goal-oriented"
Use case patterns driven requirements engineering,Use Case Patterns Catalogue Comparison,"The approach involves comparing the requirements of a new project against a pre-constructed catalogue of use case patterns to identify missing requirements.
",Pattern-based
An experimental comparison regarding the completeness of functional requirements specifications,Information Model Approach,"An objective, model-based approach for measuring the completeness of requirements specifications. It consists of an information model combined with a set of assignment rules and a guideline.",Model-based
Domain component-based service requirements modeling and analysis,Requirement Component Directed Graph Construction,"This method involves constructing a directed graph where requirement components are vertices and semantic relations (decomposition and dependency) between components are arcs. The graph is built through a process of analyzing initial requirements, inducing new requirement components through decomposition and dependency relations, and optimizing the resulting model.",Model-based
Automated requirements engineering: Use case patterns-driven approach,Use Case Patterns Catalogue Approach,Analysts browse through a pre-constructed catalogue of use case patterns to extract up to 80% of software systems requirements model. The remaining uncovered requirements indicate potential incompleteness.,Pattern-based
Enhancing domain knowledge for requirements elicitation with Web mining,Ontology Enhancement Method,A method to enhance domain ontologies by adding general concepts mined from web documents to complement domain-specific concepts.,Knowledge-based
Yet another set of requirement metrics for software projects,"Requirements completeness metrics

",Metrics used to check whether specified requirements are complete or not,Metrics-driven
Measuring complexity and completeness of KAOS goal models,"Percentage of leaf goals with associated agents
",This metric calculates the proportion of leaf goals in the model that have been assigned to an agent.,"Goal-oriented, Metrics-driven"
Semantic-based requirements analysis and verification,Ontology-based Completeness Verification,This method uses domain ontology to detect incompleteness in requirements specifications. It involves mapping atomic requirement items to semantic elements in the domain ontology and checking for unmapped elements.,Knowledge-based
Automating scenario-driven structured requirements engineering, Scenario Consistency Analysis,Analyzing the consistency between scenario descriptions and requirements models to identify missing information.,Model-based
"NLARE, a natural language processing tool for automatic requirements evaluation",NLARE Completeness Sub-module,"This module uses a regular expression parser to find three key elements expected in functional requirements: Actor, Function, and Detail.",Pattern-based
Improving requirements quality using essential use case interaction patterns,EUC Interaction Pattern Matching,The extracted EUC model is compared against templates in an EUC interaction pattern library to check for completeness.,Pattern-based
Completeness and consistency analysis on requirements of distributed event-driven systems,Condition Guard Tree Construction and Analysis,"This method involves constructing a tree structure from the condition guards associated with each event, and then analyzing this tree to identify unspecified scenarios.
",manual-based
An empirical comparative evaluation of requirements engineering methods,Degree of functional encapsulations completeness (degFEC),Measures the completeness of functional requirements by comparing the specified functions to a reference model.,Metrics-driven
Using domain ontology as domain knowledge for requirements elicitation,Ontology-based Requirements Elicitation (ORE) method,ORE uses a domain ontology to detect missing requirements by identifying unmapped ontological elements and tracing relationships between concepts.,Knowledge-based
An automatic tool for the analysis of natural language requirements,Under-specification detection,Detects sentences containing words that need to be instantiated or specified further.,Uncategorized
Verifying service-oriented requirements using model checking,Model Checking for Completeness,"The paper proposes using model checking to verify the completeness of the Service-Oriented Feature Model (SOFM). This involves transforming the SOFM into a Simple Service Model (SSM) represented as a Kripke structure, and then verifying reachability properties for each service in the model.",Formal modeling
"Assessment of high integrity software components for completeness, consistency, fault-tolerance, and reliability","Z and Statecharts Translation Method
"," This method involves translating natural language requirements into Z notation and then into Statecharts. The process of translation helps uncover ambiguities and inconsistencies in the original requirements.
",Formal modeling
Generating obstacle conditions for requirements completeness,Obstacle generation through model checking and learning,"The approach uses a combination of model checking and inductive logic programming (ILP) to iteratively generate obstacles to goals, which represent potential incompleteness in requirements.","Formal modeling, Goal-oriented"
Systems and context modeling approach to requirements analysis,Consistency Checking across Models,"This method involves converting requirements artifacts into structured information and performing consistency checks across different models (stakeholder needs, system requirements, and domain knowledge)",Uncategorized
Automated completeness check in KAOS,Automated Completeness Check Tool,The tool is implemented by integrating a set of constraints defined in Epsilon Validation Language (EVL) with a graphics editor (Ktool) developed using the Eclipse Modelling Framework (EMF).,"NLP/ML-based, Goal-oriented"
Automated requirements validation for ATP software via specification review and testing,Syntax Error Detection,Detects syntax errors in the CASDL specification during transformation to executable prototype,Uncategorized
A framework to evaluate complexity and completeness of KAOS goal models,PLGWA (Percentage of Leaf Goals With an Agent),Percentage of leaf goals that have an associated agent in the model.,"Goal-oriented, Metrics-driven"
TestMEReq: Generating abstract tests for requirements validation,Abstract Tests Generation,TestMEReq automatically generates abstract tests (test requirements and test cases) from Essential Use Case (EUC) and Essential User Interface (EUI) models. These abstract tests can help identify incomplete requirements.,Uncategorized
A TASM-based requirements validation approach for safety-critical embedded systems,Coverage Checking,Checks whether the desired behaviors specified in features can be observed in the TASM model.,Uncategorized
A framework for completeness in requirements engineering: An application in aircraft maintenance scenario,Template or checklist approach,"Using predefined templates or checklists to ensure all aspects are covered
Source:",Pattern-based
"Using correctness, consistency, and completeness patterns for automated scenarios verification",Checklist for Scenario-based SRS,A method to detect missing information by following a checklist with heuristics in Scenario-based SRS.,Pattern-based
Assessing requirements-related risks through probabilistic goals and obstacles,Probabilistic obstacle analysis,Identifies and assesses obstacles (exceptional conditions) that could prevent goal satisfaction,"Goal-oriented, Metrics-driven"
aToucan: An automated framework to derive UML analysis models from use case models,,,Uncategorized
Measuring and improving the completeness of natural language requirements,Contrastive Analysis for Term Extraction,"This method uses natural language processing to identify domain-specific terms in input documents that are relevant to the requirements. It involves POS tagging, linguistic filtering, and computing a ""termhood"" metric (C-NC value) to rank terms. It then compares the frequency of these terms in domain-generic documents to identify those that are truly domain-specific.",Metrics-driven
Improving software quality requirements specifications using spectrum analysis,Spectrum Analysis,Analyzes the distribution of quality requirements across a specification by comparing it to spectra of similar systems. Differences in spectra can indicate potential incompleteness.,Uncategorized
Analysing sanity of requirements for avionics systems,Behavior-based coverage metric,This technique measures the completeness of requirements by comparing the behavior allowed by the assumptions (specified by the user) to the behavior described by the required and forbidden requirements,Metrics-driven
Challenging Incompleteness of Performance Requirements by Sentence Patterns,Sentence Pattern Application,"The authors developed sentence patterns based on their content model for performance requirements. By attempting to apply these patterns to existing requirements, they can identify missing mandatory content elements.",Pattern-based
HAZOP-based identification of events in use cases: An empirical study,Ad hoc review,"Reviewers identify events in use cases without following any specific process or using any tools.
",manual-based
Metrics for measuring complexity and completeness for social goal models,,,Uncategorized
Framework for measuring the quality of software specification, IEEE 830 Standard Comparison,The method compares the topics in the SRS table of contents with the topics specified in the IEEE 830 standard.,Uncategorized
Validation framework for aspectual requirements engineering (ValFAR),High-level validation,Validates concerns with stakeholders using UML sequence diagrams and structured templates,Pattern-based
Completeness of Natural Language Requirements: A Comparative Study of User Stories and Feature Descriptions,Frame Semantics-based Completeness Analysis,This approach uses Fillmore's frame semantics theory to analyze the completeness of natural language requirements. It identifies verbs in a requirement sentence and compares the frame elements (FEs) that should be evoked by these verbs with the FEs that actually appear in the sentence.,NLP/ML-based
Using Language Models for Enhancing the Completeness of Natural-Language Requirements,BERT-based Masked Word Prediction,The approach uses BERT's masked language model (MLM) to generate contextualized predictions for masked words in requirements. It simulates incompleteness by withholding content from requirements and measures BERT's ability to predict terminology present in the withheld content but absent in the disclosed content.,NLP/ML-based
AI-Enabled Automation for Completeness Checking of Privacy Policies,CompAI (Compliance checking of privacy policies using Artificial Intelligence against GDPR),CompAI is an AI-based approach that uses a combination of natural language processing and machine learning to automatically identify GDPR-relevant metadata in privacy policies and check them against completeness criteria.,NLP/ML-based
An approach: SysML-based automated completeness evaluation of the system requirements specification,Requirements Refinement Metrics,"Evaluates the completeness of the White Box stage of the Problem layer in MBSE Grid.
",Metrics-driven
Requirements Capture and Analysis in ASSERT(TM),ACL2s analysis,ACL2s is a requirements analysis tool that checks for completeness among other properties.,Uncategorized
Forward engineering completeness for software by using requirements validation framework,Requirements Validation Framework,A framework that involves various stakeholders to validate and identify unadopted and adjusted requirements before software development.,NLP/ML-based
Improving requirements completeness: automated assistance through large language models,BERT-based prediction of missing terminology, The approach uses BERT's masked language model to generate contextualized predictions for filling masked slots in requirements. It simulates incompleteness by withholding content and assesses BERT's ability to predict terminology present in the withheld content but absent in the disclosed content.,NLP/ML-based
A tool-based boilerplate technique to improve SRS quality: An evaluation,Tool-based Boilerplate Technique,"A prototype tool developed to aid requirements engineers in eliciting requirements from stakeholders and recording requirements statements appropriately in SRS. It covers Section 3.2 of SRS, which elaborates on functional requirements.",Uncategorized
"A Method to Evaluating Consistency, Completeness and Correctness in Evolution Requirements","Two-phase method for evaluating consistency, completeness and correctness","The method consists of two main phases:

Analysis of the sentences described in the Service Order
Assessment of consistency, completeness and correctness in the sentences",manual-based
An intelligent recommender system based on association rule analysis for requirement engineering,Association Rule Analysis,Uses data mining techniques (specifically Apriori and FP Growth algorithms) to discover associations between requirements provided by different users.,Pattern-based
Sense: A flow-down semantics-based requirements engineering framework,SPARQL queries," SPARQL queries are used to identify issues regarding requirements, system framework, and relationships.","NLP/ML-based, Knowledge-based"
Enhancing Requirements Completeness of Automated Driving System in Concept Phase,Stakeholder identification based on product lifecycle,"Systematically identify stakeholders at each stage of the product lifecycle (concept, development, production, utilization and support, retirement) to ensure all potential stakeholders are considered.",manual-based
Towards Improved Network Security Requirements and Policy: Domain-Specific Completeness Analysis via Topic Modeling,LDA-based Topic Modeling,"Uses Latent Dirichlet Allocation (LDA) to automatically identify topics in a collection of Acceptable Use Policy (AUP) documents and determine their coverage in individual documents.
","NLP/ML-based, Metrics-driven"
PolicyChecker: Analyzing the GDPR Completeness of Mobile Apps' Privacy Policies,PolicyChecker framework, A rule and semantic role based approach that automatically detects completeness violations in privacy policies based on both mandatory and if-applicable GDPR requirements.,NLP/ML-based
An automated approach to validate requirements specification,Three-level automated approach,An automated approach consisting of three levels to validate requirements specification and detect incompleteness.,Uncategorized
Evaluation of software requirement specification based on IEEE 830 quality properties,IEEE 830 Topic Similarity Detection,The prototype extracts text from the provided SRS document and performs pattern-matching against topics from the IEEE 830 standard table of contents. It also uses a corpus of synonym topics to identify possible matches.,"Pattern-based, Metrics-driven"
A Meta-Requirement Approach to Validate User Requirement Specification: Threshold Definition,Meta-requirement Validation Approach,This approach uses meta-requirements (MR) as a high-level abstract artifact to guide the validation of requirements completeness. It involves mapping User Requirements (UR) to Meta-Requirements (MR) and analyzing the traceability between them.,"Pattern-based, Model-based, Metrics-driven"
An AI-Assisted Approach for Checking the Completeness of Privacy Policies against GDPR,AI-assisted metadata identification and completeness checking approach,The approach uses NLP and ML techniques to automatically classify the content of privacy policies according to a conceptual model of metadata types derived from GDPR. It then checks the classified content against predefined completeness criteria to detect incompleteness issues.,NLP/ML-based
A granular conceptual model to define requirements for evaluating the functional completeness of a pharmacy information system,Input Data Capture within the System Limits,"Identifies data inputs required for the execution of the requirement that come from within the same system.
",manual-based
Meta-requirement method towards analyzing completeness of requirements specification,Meta-requirement method,The method involves reverse engineering user requirements to their originated requirements (meta-requirements). This allows for comparison of meta-requirements between different systems within the same domain to produce a meta-requirement gap analysis.,Uncategorized
A Multi-solution Study on GDPR AI-enabled Completeness Checking of DPAs,Binary Classification,"For each GDPR provision, a binary classifier is trained to predict whether a given text span satisfies that provision or not.",NLP/ML-based
USQA: A User Story Quality Analyzer prototype for supporting software engineering students, Pattern-based completeness check,"The system uses 15 pattern rules to check whether a user story has the correct structure, including the User, Something, and Benefit components.",Pattern-based
Automatic recommendation to omitted steps in use case specification,Scenario Pattern Matching,The approach uses automatically extracted scenario patterns and a pattern matching algorithm to detect omitted steps in user scenarios.,Pattern-based
"Requirements in the loop : A computer-Aided analysis of consistency, completeness, and correctness of requirements",Completeness Analysis," Uses model checking technology to generate a system-under-test based on formalized requirements. For each requirement, it checks if there is a fulfilling trace that obeys all other requirements.",Formal modeling
,,,
,,,
,,,
,,,
,,,
,`,,
