Study ID,Study Title,Description of Method,Method Categories
Zowghi 2003,"On the interplay between consistency, completeness, and correctness in requirements evolution",Copy relevant missing information from previous version of requirements/domain model.,Iterative Completeness Enhancement
Issa 2010,Use case patterns driven requirements engineering,"An approach that uses a pre-constructed use case patterns catalogue as a starting point for requirements elicitation and modeling, followed by customization and addition of project-specific requirements.",Requirement Patterns and Templates
Liu 2009,Domain component-based service requirements modeling and analysis,"After constructing the initial Requirement Component Directed Graph, the method includes a step to optimize the RC model.",Tool-Guided Refinement
Issa 2011,Automated requirements engineering: Use case patterns-driven approach,Continuously update the use case patterns catalogue with new patterns discovered during projects.,Requirement Patterns and Templates
Kaiya 2010,Enhancing domain knowledge for requirements elicitation with Web mining,A method to enhance domain ontologies by adding general concepts mined from web documents to complement domain-specific concepts.,"Automated Suggestions, Tool-Guided Refinement"
Iqbal 2012,Yet another set of requirement metrics for software projects,A set of 15 steps to follow for more accurate and planned requirement gathering.,Checklist-Based Refinement
Espada 2011,Measuring complexity and completeness of KAOS goal models,The paper demonstrates a process of refining an incomplete KAOS goal model to improve its completeness.,Iterative Completeness Enhancement
Zhu 2000,Automating scenario-driven structured requirements engineering,Synthesizing requirements models from a set of scenarios to ensure completeness.,Tool-Guided Refinement
Kamalrudin 2011,Improving requirements quality using essential use case interaction patterns,"A visual approach to highlight differences between the extracted EUC model and the matched pattern template, allowing users to interactively resolve incompleteness.","Requirement Patterns and Templates, Tool-Guided Refinement"
Yu 2008,Completeness and consistency analysis on requirements of distributed event-driven systems,This method involves identifying unspecified nodes in the condition guard tree and providing options for addressing these incomplete areas.,Checklist-Based Refinement
Kaiya 2006,Using domain ontology as domain knowledge for requirements elicitation,A systematic approach to improve requirements completeness using domain ontologies.,"Automated Suggestions, Iterative Completeness Enhancement"
Kim 2003,"Assessment of high integrity software components for completeness, consistency, fault-tolerance, and reliability",This method involves iteratively refining the Z specifications based on issues uncovered during Statechart simulation.,Iterative Completeness Enhancement
Alrajeh 2012,Generating obstacle conditions for requirements completeness,"The approach iteratively generates obstacles and allows analysts to select significant ones, negate them, and add them to the background properties for further analysis.","Obstacle Resolution, Iterative Completeness Enhancement"
Ahuja 2014,Systems and context modeling approach to requirements analysis,"This approach involves creating structured models of stakeholder needs, system requirements, and domain knowledge. It allows for easier identification and correction of inconsistencies and incompleteness.",Tool-Guided Refinement
Nwokeji 2014,Automated completeness check in KAOS,"The paper demonstrates a process of iteratively refining goals, assigning agents, and associating operations to correct incompleteness in KAOS models.","Tool-Guided Refinement, Iterative Completeness Enhancement"
Moketar 2016,TestMEReq: Generating abstract tests for requirements validation,TestMEReq supports an iterative process of requirements validation and correction through the generation and review of abstract tests and UI prototypes.,"Tool-Guided Refinement, Iterative Completeness Enhancement"
Zhou 2014,A TASM-based requirements validation approach for safety-critical embedded systems,"A systematic approach to model requirements using the extended TASM language, which helps in identifying and addressing incompleteness.",Checklist-Based Refinement
Zenuna 2013,A framework for completeness in requirements engineering: An application in aircraft maintenance scenario,"A structured process following three dimensions (analysis, integration, and structure) to elicit and write requirements in a way to achieve a sufficient degree of completeness.",Checklist-Based Refinement
Sarmiento 2016,"Using correctness, consistency, and completeness patterns for automated scenarios verification",Uses a catalog of Non-Functional Requirements (NFR) patterns to organize properties related to completeness and guide the correction process.,Requirement Patterns and Templates
Cailliau 2013,Assessing requirements-related risks through probabilistic goals and obstacles,Selecting and applying countermeasures to resolve critical obstacles.,Obstacle Resolution
Ferrari 2014,Measuring and improving the completeness of natural language requirements,An interactive tool that suggests relevant terms and relations from input documents to the requirements engineer during the requirements writing process.,"Automated Suggestions, Tool-Guided Refinement"
Kaiya 2012,Improving software quality requirements specifications using spectrum analysis,Applies recommendation rules to suggest quality requirements that should be added to functional requirements to improve completeness.,"Automated Suggestions, Iterative Completeness Enhancement"
Barnat 2016,Analysing sanity of requirements for avionics systems,Suggests new LTL formulae to improve completeness.,"Automated Suggestions, Tool-Guided Refinement, Iterative Completeness Enhancement"
Eckhardt 2016,Challenging Incompleteness of Performance Requirements by Sentence Patterns,"Using the proposed sentence patterns to specify performance requirements, ensuring completeness by construction.",Requirement Patterns and Templates
Gralha 2015,Metrics for measuring complexity and completeness for social goal models,The paper suggests using the metrics as a feedback mechanism to guide the refinement and completion of i* models.,"Tool-Guided Refinement, Iterative Completeness Enhancement"
Alshareef 2020,Validation framework for aspectual requirements engineering (ValFAR),Decomposing general concerns into sub-concerns.,Checklist-Based Refinement
Luitel 2023,Using Language Models for Enhancing the Completeness of Natural-Language Requirements,"The approach uses BERT to generate predictions for masked words in requirements, then applies a machine learning-based filter to reduce noise in the predictions. The resulting list of recommended terms can be used to identify and potentially correct incompleteness in requirements.","Automated Suggestions, Tool-Guided Refinement"
Bankauskaite 2018,An approach: SysML-based automated completeness evaluation of the system requirements specification,The paper implicitly suggests an iterative process of refining and satisfying requirements based on the completeness metrics.,"Tool-Guided Refinement, Iterative Completeness Enhancement"
Crapo 2017,Requirements Capture and Analysis in ASSERT(TM),"Requirements are captured, analyzed, and then refined based on the analysis results.","Tool-Guided Refinement, Iterative Completeness Enhancement"
Iqbal 2019,Forward engineering completeness for software by using requirements validation framework,A framework to validate requirements and identify necessary adjustments before software development.,Checklist-Based Refinement
Luitel 2024,Improving requirements completeness: automated assistance through large language models,"Uses BERT to generate predictions for masked words in requirements, applies filtering to remove non-relevant predictions, and recommends remaining terms as potentially missing terminology.","Automated Suggestions, Tool-Guided Refinement"
Ahmad 2018,A tool-based boilerplate technique to improve SRS quality: An evaluation,A prototype tool that guides requirements engineers in writing complete software requirements for a generic information management system.,"Requirement Patterns and Templates, Tool-Guided Refinement"
Muhairat 2020,An intelligent recommender system based on association rule analysis for requirement engineering,Uses discovered association rules to suggest potentially missing requirements to users.,"Automated Suggestions, Tool-Guided Refinement"
Kravari 2021,Sense: A flow-down semantics-based requirements engineering framework,Recommends appropriate standardized requirement expressions (boilerplates) based on requirement type and system context.,"Requirement Patterns and Templates, Automated Suggestions"
Abbadi 2022,Enhancing Requirements Completeness of Automated Driving System in Concept Phase,"Various techniques to capture stakeholder needs, including strategy documents, technical documents, prototypes, interviews, brainstorming sessions, modeling and simulation reports.",Checklist-Based Refinement
Xiang 2023,PolicyChecker: Analyzing the GDPR Completeness of Mobile Apps' Privacy Policies,A set of recommendations provided to app developers to improve the completeness of their apps' privacy policies.,Checklist-Based Refinement
Stephen 2020,Evaluation of software requirement specification based on IEEE 830 quality properties,The prototype suggests possible amendments to the SRS structure based on detected synonym topics and missing IEEE 830 topics.,"Automated Suggestions, Checklist-Based Refinement"
Huayllani 2020,A granular conceptual model to define requirements for evaluating the functional completeness of a pharmacy information system,A framework that guides the definition of requirements by breaking them down into five key areas to ensure comprehensive coverage of all aspects of a requirement.,Checklist-Based Refinement
Ong 2019,Meta-requirement method towards analyzing completeness of requirements specification,The proposed approach involves building a repository of meta-requirements and using it to perform a gap analysis between different systems in the same domain.,Automated Suggestions
Jiménez 2023,USQA: A User Story Quality Analyzer prototype for supporting software engineering students,"The USQA tool provides feedback to users about the completeness of their user stories, allowing them to correct and improve their writing.",Tool-Guided Refinement
Ko 2019,Automatic recommendation to omitted steps in use case specification,The approach recommends appropriate steps for the omitted parts of use case scenarios based on extracted scenario patterns.,"Automated Suggestions, Requirement Patterns and Templates"
Meincke 2020,"Requirements in the loop: A computer-Aided analysis of consistency, completeness, and correctness of requirements",An iterative approach where formalization and analysis results are used to identify and correct issues in requirements.,"Iterative Completeness Enhancement, Tool-Guided Refinement"
